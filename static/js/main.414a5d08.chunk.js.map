{"version":3,"sources":["components/Section.js","components/Loader.js","components/Message.js","components/Poster.js","routes/Home/HomePresenter.js","api.js","routes/Home/index.js","routes/Home/HomeContainer.js","routes/TV/TvPresenter.js","routes/TV/index.js","routes/TV/TvContainer.js","routes/Search/SearchPresenter.js","routes/Search/index.js","routes/Search/SearchContainer.js","components/Tabs.js","components/Videos.js","components/Reviews.js","components/Company.js","components/CreatedBy.js","components/Seasons.js","routes/Detail/DetailPresenter.js","routes/Detail/index.js","routes/Detail/DetailContainer.js","routes/Collection/CollectionPresenter.js","routes/Collection/index.js","routes/Collection/CollectionContainer.js","components/Header.js","components/Router.js","components/GlobalStyles.js","components/App.js","index.js"],"names":["Container","styled","div","Title","span","Grid","Section","title","children","Loader","role","aria-label","Text","props","color","Message","text","Image","imageUrl","Rating","ImageContainer","Year","Poster","id","rating","year","isMovie","to","length","substring","HomePresenter","nowPlaying","upcoming","popular","error","loading","Helmet","map","movie","poster_path","original_title","vote_average","release_date","split","api","axios","create","baseURL","params","api_key","language","commonApi","get","moviesApi","append_to_response","term","query","encodeURIComponent","page","tvApi","HomeContainer","state","a","data","results","this","setState","React","Component","TvPresenter","topRated","airingToday","show","original_name","first_air_date","TvContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","STabs","ul","Tab","li","current","TabContent","activeIndex","Tabs","items","useState","setActiveIndex","activeItem","ActiveComponent","component","activeProps","item","index","onClick","YTContainer","Videos","videos","setVideos","setLoading","ytOptions","height","width","getVideos","useCallback","console","useEffect","video","videoId","key","opts","ReviewContainer","UserContainer","UserAvatar","img","UserInfo","UserName","UserCreated","Content","Reviews","reviews","setReviews","getReviews","getFormattedDate","datetime","date","Date","getFullYear","getMonth","getDate","review","src","author_details","avatar_path","alt","name","author","created_at","content","Logo","companies","logo_path","ItemContainer","Profile","NameContainer","Name","CreatedBy","createdBy","profile_path","SeasonContainer","Info","TitleContainer","Overview","seasons","season","air_date","overview","Backdrop","bgImage","Cover","Data","h3","Item","Divider","p","ImdbLink","SLink","Link","DetailPresenter","result","getTabItems","Company","production_companies","Seasons","created_by","backdrop_path","style","genres","genre","runtime","episode_run_time","href","imdb_id","marginLeft","DetailContainer","pathname","location","includes","match","push","history","parsedId","parseInt","isNaN","log","parts","CollectionContainer","setParts","setError","getCollection","response","status","CollectionPresenter","SHeader","header","List","Header","startsWith","withRouter","path","exact","Home","TV","Search","Detail","Collection","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.414a5d08.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: bold;\n`;\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => {\n  return (\n    <Container>\n      <Title>{title}</Title>\n      <Grid>{children}</Grid>\n    </Container>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node\n};\n\nexport default Section;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  color: white;\n  font-size: 30px;\n  margin-top: 20px;\n`;\n\nconst Loader = () => (\n  <Container>\n    <span role=\"img\" aria-label=\"loading\" />⏳\n  </Container>\n);\n\nexport default Loader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\nconst Text = styled.span`\n  color: ${(props) => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired\n};\n\nexport default Message;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  font-size: 13px;\n`;\nconst Image = styled.div`\n  background-image: url(${(props) => `https://image.tmdb.org/t/p/w300${props.imageUrl}`});\n  background-size: cover;\n  background-position: center center;\n  transition: opacity 0.2s linear;\n  border-radius: 4px;\n  height: 170px;\n`;\nconst Rating = styled.span`\n  position: absolute;\n  bottom: 5px;\n  right: 5px;\n  opacity: 0;\n`;\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image imageUrl={imageUrl} />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\" /> {rating} / 10\n        </Rating>\n      </ImageContainer>\n      <Title>{title.length > 15 ? `${title.substring(0, 15)}...` : title}</Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool\n};\n\nexport default Poster;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\nimport Section from 'components/Section';\nimport Loader from 'components/Loader';\nimport Message from 'components/Message';\nimport Poster from 'components/Poster';\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, upcoming, popular, error, loading }) => {\n  return (\n    <>\n      <Helmet>\n        <title>Movies | Nomflix</title>\n      </Helmet>\n      {loading ? (\n        <Loader />\n      ) : (\n        <Container>\n          {nowPlaying && nowPlaying.length > 0 && (\n            <Section title=\"Now Playing\">\n              {nowPlaying.map((movie) => (\n                <Poster\n                  key={movie.id}\n                  id={movie.id}\n                  imageUrl={movie.poster_path}\n                  title={movie.original_title}\n                  rating={movie.vote_average}\n                  year={movie.release_date.split('-')[0]}\n                  isMovie={true}\n                />\n              ))}\n            </Section>\n          )}\n          {upcoming && upcoming.length > 0 && (\n            <Section title=\"Upcoming Movies\">\n              {upcoming.map((movie) => (\n                <Poster\n                  key={movie.id}\n                  id={movie.id}\n                  imageUrl={movie.poster_path}\n                  title={movie.original_title}\n                  rating={movie.vote_average}\n                  year={movie.release_date.split('-')[0]}\n                  isMovie={true}\n                />\n              ))}\n            </Section>\n          )}\n          {popular && popular.length > 0 && (\n            <Section title=\"Popular Movies\">\n              {popular.map((movie) => (\n                <Poster\n                  key={movie.id}\n                  id={movie.id}\n                  imageUrl={movie.poster_path}\n                  title={movie.original_title}\n                  rating={movie.vote_average}\n                  year={movie.release_date.split('-')[0]}\n                  isMovie={true}\n                />\n              ))}\n            </Section>\n          )}\n          {error && <Message color=\"#e74c3c\" text={error} />}\n        </Container>\n      )}\n    </>\n  );\n};\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  upcoming: PropTypes.array,\n  popular: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired\n};\n\nexport default HomePresenter;\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: 'fda3e97aacb5071d7149afd44d3d13d0',\n    language: 'en-US'\n  }\n});\n\nexport const commonApi = {\n  collection: (id) => api.get(`collection/${id}`)\n};\n\nexport const moviesApi = {\n  nowPlaying: () => api.get('movie/now_playing'),\n  upcoming: () => api.get('movie/upcoming'),\n  popular: () => api.get('movie/popular'),\n  movieDetail: (id) =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: 'videos'\n      }\n    }),\n  search: (term) =>\n    api.get(`search/movie`, {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    }),\n  movieVideos: (id) => api.get(`movie/${id}/videos`),\n  movieReviews: (id, page = 1) =>\n    api.get(`movie/${id}/reviews`, {\n      params: { page }\n    })\n};\n\nexport const tvApi = {\n  airingToday: () => api.get('tv/airing_today'),\n  topRated: () => api.get('tv/top_rated'),\n  popular: () => api.get('tv/popular'),\n  tvDetail: (id) =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: 'videos'\n      }\n    }),\n  search: (term) =>\n    api.get(`search/tv`, {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    }),\n  tvVideos: (id) => api.get(`tv/${id}/videos`),\n  tvReviews: (id, page = 1) =>\n    api.get(`tv/${id}/reviews`, {\n      params: { page }\n    })\n};\n","import HomeContainer from './HomeContainer'\n\nexport default HomeContainer\n","import React from 'react';\nimport HomePresenter from './HomePresenter';\nimport { moviesApi } from 'api';\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying }\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upcoming }\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: popular }\n      } = await moviesApi.popular();\n\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular\n      })\n    } catch {\n      this.setState({\n        error: \"Can't find moves information.\"\n      });\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return (\n      <HomePresenter nowPlaying={nowPlaying} upcoming={upcoming} popular={popular} error={error} loading={loading} />\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\nimport Section from '../../components/Section';\nimport Loader from 'components/Loader';\nimport Message from 'components/Message';\nimport Poster from 'components/Poster';\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TvPresenter = ({ topRated, popular, airingToday, error, loading }) => {\n  return (\n    <>\n      <Helmet>\n        <title>TV Shows | Nomflix</title>\n      </Helmet>\n      {loading ? (\n        <Loader />\n      ) : (\n        <Container>\n          {topRated && topRated.length > 0 && (\n            <Section title=\"Top Rated Shows\">\n              {topRated.map((show) => (\n                <Poster\n                  key={show.id}\n                  id={show.id}\n                  imageUrl={show.poster_path}\n                  title={show.original_name}\n                  rating={show.vote_average}\n                  year={show.first_air_date.split('-')[0]}\n                  isMovie={false}\n                />\n              ))}\n            </Section>\n          )}\n          {airingToday && airingToday.length > 0 && (\n            <Section title=\"Airing Today\">\n              {airingToday.map((show) => (\n                <Poster\n                  key={show.id}\n                  id={show.id}\n                  imageUrl={show.poster_path}\n                  title={show.original_name}\n                  rating={show.vote_average}\n                  year={show.first_air_date.split('-')[0]}\n                  isMovie={false}\n                />\n              ))}\n            </Section>\n          )}\n          {popular && popular.length > 0 && (\n            <Section title=\"Popular Shows\">\n              {popular.map((show) => (\n                <Poster\n                  key={show.id}\n                  id={show.id}\n                  imageUrl={show.poster_path}\n                  title={show.original_name}\n                  rating={show.vote_average}\n                  year={show.first_air_date.split('-')[0]}\n                  isMovie={false}\n                />\n              ))}\n            </Section>\n          )}\n          {error && <Message color=\"#e74c3c\" text={error} />}\n        </Container>\n      )}\n    </>\n  );\n};\n\nTvPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired\n};\n\nexport default TvPresenter;\n","import TvContainer from './TvContainer'\n\nexport default TvContainer\n","import React from 'react';\nimport TvPresenter from './TvPresenter';\nimport { tvApi } from 'api';\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    error: null,\n    loading: true\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated }\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular }\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday }\n      } = await tvApi.airingToday();\n\n      this.setState({\n        topRated,\n        popular,\n        airingToday\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find tv information.\"\n      });\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n  render() {\n    const { topRated, popular, airingToday, error, loading } = this.state;\n    return (\n      <TvPresenter topRated={topRated} popular={popular} airingToday={airingToday} error={error} loading={loading} />\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\nimport Loader from 'components/Loader';\nimport Section from 'components/Section';\nimport Message from 'components/Message';\nimport Poster from 'components/Poster';\n\nconst Container = styled.div`\n  padding: 0 20px;\n`;\nconst Form = styled.form`\n  margin-bottom: 50px;\n`;\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({ movieResults, tvResults, searchTerm, error, loading, handleSubmit, updateTerm }) => {\n  return (\n    <Container>\n      <Helmet>\n        <title>Search | Nomflix</title>\n      </Helmet>\n      <Form onSubmit={handleSubmit}>\n        <Input placeholder=\"Search Movies or TV Shows...\" value={searchTerm} onChange={updateTerm} />\n      </Form>\n      {loading ? (\n        <Loader />\n      ) : (\n        <>\n          {movieResults && movieResults.length > 0 && (\n            <Section title=\"Movie Results\">\n              {movieResults.map((movie) => (\n                <Poster\n                  key={movie.id}\n                  id={movie.id}\n                  imageUrl={movie.poster_path}\n                  title={movie.original_title}\n                  rating={movie.vote_average}\n                  year={movie.release_date?.split('-')[0]}\n                  isMovie={true}\n                />\n              ))}\n            </Section>\n          )}\n          {tvResults && tvResults.length > 0 && (\n            <Section title=\"TV Show Results\">\n              {tvResults.map((show) => (\n                <Poster\n                  key={show.id}\n                  id={show.id}\n                  imageUrl={show.poster_path}\n                  title={show.original_name}\n                  rating={show.vote_average}\n                  year={show.first_air_date?.split('-')[0]}\n                  isMovie={false}\n                />\n              ))}\n            </Section>\n          )}\n          {error && <Message color=\"#e74c3c\" text={error} />}\n          {tvResults && movieResults && tvResults.length === 0 && movieResults.length === 0 && (\n            <Message text=\"Nothing found.\" color=\"#95a5a6\" />\n          )}\n        </>\n      )}\n    </Container>\n  );\n};\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  searchTerm: PropTypes.string,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;\n","import SearchContainer from './SearchContainer'\n\nexport default SearchContainer\n","import React from 'react';\nimport SearchPresenter from './SearchPresenter';\nimport { moviesApi, tvApi } from 'api';\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: '',\n    error: null,\n    loading: false\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { searchTerm } = this.state;\n    if (searchTerm !== '') {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = (event) => {\n    const {\n      target: { value }\n    } = event;\n    this.setState({\n      searchTerm: value\n    });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({\n      loading: true\n    });\n    try {\n      const {\n        data: { results: movieResults }\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults }\n      } = await tvApi.search(searchTerm);\n\n      this.setState({\n        movieResults,\n        tvResults\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find results.\"\n      });\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, error, loading } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        error={error}\n        loading={loading}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst STabs = styled.ul`\n  color: white;\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n`;\nconst Tab = styled.li`\n  width: 120px;\n  height: 40px;\n  text-align: center;\n  background-color: ${(props) => (props.current ? 'rgb(255, 255, 255, 0.1)' : 'transparent')};\n  transition: border-bottom 0.5s ease-in-out;\n  border-radius: 5px 5px 0 0;\n  cursor: pointer;\n`;\nconst Title = styled.div`\n  font-size: 15px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nconst TabContent = styled.div`\n  height: calc(100% - 40px);\n  padding: 10px;\n  overflow: scroll;\n  overflow-x: hidden;\n  background-color: rgb(255, 255, 255, 0.1);\n  border-radius: 5px;\n  border-top-left-radius: ${(props) => (props.activeIndex === 0 ? 0 : '5px')};\n  &::-webkit-scrollbar {\n    background-color: transparent;\n  }\n  &::-webkit-scrollbar-thumb {\n    background-color: rgb(255, 255, 255, 0.1);\n    border-radius: 10px;\n  }\n`;\n\nconst Tabs = ({ items }) => {\n  const [activeIndex, setActiveIndex] = useState(1);\n\n  const activeItem = items[activeIndex];\n  const ActiveComponent = activeItem.component;\n  const activeProps = activeItem.props;\n\n  return (\n    <>\n      <STabs>\n        {items.map((item, index) => (\n          <Tab current={activeIndex === index} key={index} onClick={() => setActiveIndex(index)}>\n            <Title>{item.title}</Title>\n          </Tab>\n        ))}\n      </STabs>\n      <TabContent activeIndex={activeIndex}>\n        <ActiveComponent {...activeProps} />\n      </TabContent>\n    </>\n  );\n};\n\nexport default Tabs;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport YouTube from 'react-youtube';\nimport styled from 'styled-components';\nimport { moviesApi, tvApi } from 'api';\nimport Loader from 'components/Loader';\n\nconst Container = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\nconst YTContainer = styled.div`\n  margin-bottom: 10px;\n`;\n\nconst Videos = ({ isMovie, id }) => {\n  const [videos, setVideos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const ytOptions = {\n    height: '270',\n    width: '480'\n  };\n\n  const getVideos = useCallback(async () => {\n    try {\n      const { data } = isMovie ? await moviesApi.movieVideos(id) : await tvApi.tvVideos(id);\n      setVideos(data.results);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  }, [isMovie, id]);\n\n  useEffect(() => {\n    getVideos();\n  }, [isMovie, id]);\n\n  return loading ? (\n    <Loader />\n  ) : (\n    <Container>\n      {videos.length\n        ? videos.map((video, index) => (\n            <YTContainer key={index}>\n              <YouTube videoId={video.key} opts={ytOptions} />\n            </YTContainer>\n          ))\n        : 'Nothing Found.'}\n    </Container>\n  );\n};\n\nexport default Videos;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { moviesApi, tvApi } from 'api';\nimport Loader from 'components/Loader';\n\nconst Container = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\nconst ReviewContainer = styled.div`\n  padding-bottom: 10px;\n  margin-top: 10px;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n  &:first-child {\n    margin-top: 0px;\n  }\n  &:last-child {\n    border-bottom: 0px;\n  }\n`;\nconst UserContainer = styled.div`\n  display: flex;\n  height: 50px;\n`;\nconst UserAvatar = styled.img`\n  width: 50px;\n  height: 50px;\n  border-radius: 10px;\n`;\nconst UserInfo = styled.div`\n  width: calc(100% - 150px);\n  height: 100%;\n  padding-left: 10px;\n`;\nconst UserName = styled.div`\n  height: 30px;\n  font-size: 13px;\n  font-weight: bold;\n  line-height: 30px;\n`;\nconst UserCreated = styled.div`\n  height: 20px;\n  vertical-align: bottom;\n  display: inline;\n  line-height: 20px;\n  font-size: 10px;\n  opacity: 0.7;\n`;\nconst Rating = styled.div`\n  width: 100px;\n  font-size: 18px;\n  line-height: 50px;\n`;\nconst Content = styled.div`\n  width: 100%;\n  height: auto;\n  white-space: pre-line;\n  padding-top: 7px;\n`;\n\nconst Reviews = ({ isMovie, id }) => {\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [page, setPage] = useState(1);\n  const avatarUrl = 'https://image.tmdb.org/t/p/w50_and_h50_face';\n\n  const getReviews = useCallback(async () => {\n    try {\n      const { data } = isMovie ? await moviesApi.movieReviews(id, page) : await tvApi.tvReviews(id, page);\n      setReviews(data.results);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  }, [isMovie, id, page]);\n\n  const getFormattedDate = useCallback((datetime) => {\n    const date = new Date(datetime);\n\n    return `${date.getFullYear()}.${date.getMonth() + 1}.${date.getDate()}`;\n  });\n\n  useEffect(() => {\n    getReviews();\n  }, [isMovie, id, getReviews]);\n\n  return loading ? (\n    <Loader />\n  ) : (\n    <Container>\n      {reviews.length\n        ? reviews.map((review) => (\n            <ReviewContainer>\n              <UserContainer>\n                <UserAvatar src={`${avatarUrl}${review.author_details.avatar_path}`} alt={review.author_details.name} />\n                <UserInfo>\n                  <UserName>{review.author}</UserName>\n                  <UserCreated>{getFormattedDate(review.created_at)}</UserCreated>\n                </UserInfo>\n                <Rating>🌟 {review.author_details.rating} / 10</Rating>\n              </UserContainer>\n              <Content>{review.content}</Content>\n            </ReviewContainer>\n          ))\n        : 'Nothing Found.'}\n    </Container>\n  );\n};\n\nexport default Reviews;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\nconst Logo = styled.img`\n  width: 200px;\n  height: 200px;\n  background: white;\n  margin-bottom: 10px;\n`;\n\nconst Videos = ({ companies }) => {\n  const logoUrl = 'https://image.tmdb.org/t/p/w200';\n\n  return (\n    <Container>\n      {companies.length ? companies.map(({ logo_path }) => <Logo src={`${logoUrl}${logo_path}`} />) : 'Nothing Found.'}\n    </Container>\n  );\n};\n\nexport default Videos;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\nconst ItemContainer = styled.div`\n  padding-bottom: 10px;\n  margin-top: 10px;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n  &:first-child {\n    margin-top: 0px;\n  }\n  &:last-child {\n    border-bottom: 0px;\n  }\n  display: flex;\n`;\nconst Profile = styled.img`\n  width: 200px;\n  height: 300px;\n`;\nconst NameContainer = styled.div`\n  width: calc(100% - 210px);\n  padding-left: 10px;\n`;\nconst Name = styled.div`\n  width: 100%;\n  font-size: 25px;\n  font-weight: bold;\n  line-height: 50px;\n`;\n\nconst CreatedBy = ({ createdBy }) => {\n  const imgUrl = 'https://image.tmdb.org/t/p/w200';\n\n  return (\n    <Container>\n      {createdBy.length\n        ? createdBy.map(({ name, profile_path }) => (\n            <ItemContainer>\n              <Profile src={`${imgUrl}${profile_path}`} />\n              <NameContainer>\n                <Name>{name}</Name>\n              </NameContainer>\n            </ItemContainer>\n          ))\n        : 'Nothing Found.'}\n    </Container>\n  );\n};\n\nexport default CreatedBy;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { moviesApi, tvApi } from 'api';\nimport Loader from 'components/Loader';\n\nconst Container = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\nconst SeasonContainer = styled.div`\n  padding-bottom: 10px;\n  margin-top: 10px;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n  &:first-child {\n    margin-top: 0px;\n  }\n  &:last-child {\n    border-bottom: 0px;\n  }\n  display: flex;\n`;\nconst Poster = styled.img`\n  width: 200px;\n  height: 300px;\n`;\nconst Info = styled.div`\n  width: calc(100% - 210px);\n  padding-left: 10px;\n`;\nconst TitleContainer = styled.div`\n  width: 100%;\n  height: 100px;\n  display: flex;\n  flex-direction: column;\n`;\nconst Title = styled.div`\n  font-size: 25px;\n  font-weight: bold;\n  line-height: 50px;\n`;\nconst Date = styled.div`\n  font-size: 15px;\n`;\nconst Overview = styled.div`\n  width: 100%;\n  height: auto;\n  white-space: pre-line;\n`;\n\nconst Reviews = ({ seasons }) => {\n  const imgUrl = 'https://image.tmdb.org/t/p/w300';\n\n  return (\n    <Container>\n      {seasons.length\n        ? seasons.map((season) => (\n            <SeasonContainer>\n              <Poster src={`${imgUrl}${season.poster_path}`} alt={season.name} />\n              <Info>\n                <TitleContainer>\n                  <Title>{season.name}</Title>\n                  <Date>{season.air_date}</Date>\n                </TitleContainer>\n                <Overview>{season.overview}</Overview>\n              </Info>\n            </SeasonContainer>\n          ))\n        : 'Nothing Found.'}\n    </Container>\n  );\n};\n\nexport default Reviews;\n","import React, { useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\nimport Loader from 'components/Loader';\nimport Message from 'components/Message';\nimport Tabs from 'components/Tabs';\nimport Videos from 'components/Videos';\nimport Reviews from 'components/Reviews';\nimport Company from 'components/Company';\nimport CreatedBy from 'components/CreatedBy';\nimport Seasons from 'components/Seasons';\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.2;\n  z-index: 0;\n`;\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  position: relative;\n  z-index: 1;\n`;\nconst Cover = styled.div`\n  background-image: url(${(props) => props.bgImage});\n  background-position: center;\n  background-size: cover;\n  width: 30%;\n  height: 100%;\n`;\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\nconst Title = styled.h3`\n  font-size: 35px;\n  margin-bottom: 10px;\n`;\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\nconst Item = styled.span``;\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\nconst Overview = styled.p`\n  font-size: 12px;\n  color: rgba(255, 255, 255, 0.7);\n  line-height: 1.5;\n  width: 50%;\n`;\nconst ImdbLink = styled.a`\n  background-color: #f5c518;\n  padding: 2px 4px;\n  border-radius: 6px;\n  color: #121212;\n`;\nconst SLink = styled(Link)`\n  text-decoration: underline;\n  margin-top: 7px;\n  display: block;\n  color: rgb(27 162 204);\n`;\n\nconst DetailPresenter = ({ result, error, loading, isMovie }) => {\n  // const tabItems = [\n  //   { title: 'Videos', path: '/video', component: Videos, props: { isMovie: true, id: result.id } },\n  //   { title: 'Reviews', path: '/reviews', component: Videos, props: { isMovie: true, id: result.id } }\n  // ];\n\n  const getTabItems = useCallback((isMovie, result) => {\n    if (isMovie) {\n      return [\n        { title: 'Videos', component: Videos, props: { isMovie, id: result.id } },\n        { title: 'Reviews', component: Reviews, props: { isMovie, id: result.id } },\n        { title: 'Company', component: Company, props: { companies: result.production_companies } }\n      ];\n    } else {\n      return [\n        { title: 'Seasons', component: Seasons, props: { seasons: result.seasons } },\n        { title: 'Created By', component: CreatedBy, props: { createdBy: result.created_by } },\n        { title: 'Company', component: Company, props: { companies: result.production_companies } }\n      ];\n    }\n  });\n\n  return loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Nomflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : error ? (\n    <Message color=\"#e74c3c\" text={error} />\n  ) : (\n    <Container>\n      <Helmet>\n        <title>{result.original_title ? result.original_title : result.original_name} | Nomflix</title>\n      </Helmet>\n      <Backdrop bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`} />\n      <Content>\n        <Cover bgImage={`https://image.tmdb.org/t/p/original${result.poster_path}`} />\n        <Data>\n          <div style={{ height: '50%' }}>\n            <Title>{result.original_title ? result.original_title : result.original_name}</Title>\n            <ItemContainer>\n              <Item>\n                {result.release_date ? result.release_date.substring(0, 4) : result.first_air_date.substring(0, 4)}\n              </Item>\n              <Divider>·</Divider>\n              <Item>\n                {result.genres &&\n                  result.genres.map((genre, index) =>\n                    index === result.genres.length - 1 ? genre.name : `${genre.name} / `\n                  )}\n              </Item>\n              <Divider>·</Divider>\n              <Item>{result.runtime ? result.runtime : result.episode_run_time[0]}</Item>\n              <Divider>·</Divider>\n              <Item>\n                <ImdbLink href={`https://www.imdb.com/title/${result.imdb_id}`} target=\"_blank\">\n                  IMDB\n                </ImdbLink>\n              </Item>\n            </ItemContainer>\n            <Overview>{result.overview}</Overview>\n            <SLink to={`/collection/${result.id}`}> See Other Collection..</SLink>\n          </div>\n          <div style={{ height: '50%', marginLeft: '10px' }}>\n            <Tabs items={getTabItems(isMovie, result)} />\n          </div>\n        </Data>\n      </Content>\n    </Container>\n  );\n};\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired\n};\n\nexport default DetailPresenter;\n","import DetailContainer from './DetailContainer'\n\nexport default DetailContainer\n","import React from 'react';\nimport DetailPresenter from './DetailPresenter';\nimport { moviesApi, tvApi } from 'api';\n\nexport default class DetailContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const {\n      location: { pathname }\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes('/movie/')\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id }\n      },\n      history: { push }\n    } = this.props;\n    const parsedId = parseInt(id);\n    const { isMovie } = this.state;\n\n    if (isNaN(parsedId)) {\n      // 숫자가 아닌 값으로 id에 접근한 경우\n      return push('/');\n    }\n\n    let result = null;\n    try {\n      ({ data: result } = isMovie ? await moviesApi.movieDetail(id) : await tvApi.tvDetail(id));\n    } catch {\n      this.setState({ error: \"Can't find anything.\" });\n    } finally {\n      this.setState({ loading: false, result });\n      console.log(result);\n    }\n  }\n\n  render() {\n    const { result, error, loading, isMovie } = this.state;\n    return <DetailPresenter result={result} error={error} loading={loading} isMovie={isMovie} />;\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\nimport Section from 'components/Section';\nimport Loader from 'components/Loader';\nimport Message from 'components/Message';\nimport Poster from 'components/Poster';\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ parts, error, loading }) => {\n  return (\n    <>\n      <Helmet>\n        <title>Movies | Collection</title>\n      </Helmet>\n      {loading ? (\n        <Loader />\n      ) : (\n        <Container>\n          {parts && parts.length > 0 && (\n            <Section title=\"Collection\">\n              {parts.map((movie) => (\n                <Poster\n                  key={movie.id}\n                  id={movie.id}\n                  imageUrl={movie.poster_path}\n                  title={movie.original_title}\n                  rating={movie.vote_average}\n                  year={movie.release_date.split('-')[0]}\n                  isMovie={true}\n                />\n              ))}\n            </Section>\n          )}\n          {error && <Message color=\"#e74c3c\" text={error} />}\n        </Container>\n      )}\n    </>\n  );\n};\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  upcoming: PropTypes.array,\n  popular: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired\n};\n\nexport default HomePresenter;\n","import CollectionContainer from './CollectionContainer';\n\nexport default CollectionContainer;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport CollectionPresenter from './CollectionPresenter';\nimport { commonApi } from 'api';\n\nconst CollectionContainer = (props) => {\n  const [parts, setParts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  const getCollection = useCallback(async (id) => {\n    try {\n      const { data } = await commonApi.collection(id);\n      setParts(data.parts);\n    } catch (error) {\n      if (error.response.status !== 200) setError(\"Can't find collection.\");\n    } finally {\n      setLoading(false);\n    }\n  });\n\n  useEffect(() => {\n    const id = props.match.params.id;\n    getCollection(id);\n  }, []);\n\n  return <CollectionPresenter parts={parts} error={error} loading={loading} />;\n};\n\nexport default CollectionContainer;\n","import { Link, withRouter } from 'react-router-dom';\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\n\nconst SHeader = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  padding: 0 10px;\n  background-color: rgba(20, 20, 20, 0.8);\n  box-shadow: 0 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\nconst List = styled.ul`\n  display: flex;\n`;\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid ${(props) => (props.current ? '#3498db' : 'transparent')};\n  transition: border-bottom 0.5s ease-in-out;\n`;\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nclass Header extends Component {\n  render() {\n    const pathname = this.props.location.pathname;\n\n    return (\n      <SHeader>\n        <List>\n          <Item current={pathname === '/' || pathname.startsWith('/movie')}>\n            <SLink to=\"/\">Movies</SLink>\n          </Item>\n          <Item current={pathname === '/tv' || pathname.startsWith('/show')}>\n            <SLink to=\"../tv\">TV</SLink>\n          </Item>\n          <Item current={pathname === '/search'}>\n            <SLink to=\"/search\">Search</SLink>\n          </Item>\n        </List>\n      </SHeader>\n    );\n  }\n}\n\nexport default withRouter(Header);\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport Home from '../routes/Home';\nimport TV from '../routes/TV';\nimport Search from '../routes/Search';\nimport Detail from '../routes/Detail';\nimport Collection from '../routes/Collection';\nimport Header from './Header';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default () => (\n  //  exact : path 가 정확히 일치하는 경우에 routing\n  <Router>\n    <Header />\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/tv\" component={TV} />\n      <Route path=\"/search\" component={Search} />\n      <Route path=\"/movie/:id\" component={Detail} />\n      <Route path=\"/show/:id\" component={Detail} />\n      <Route path=\"/collection/:id\" component={Collection} />\n      <Redirect from=\"*\" to=\"/\" />\n    </Switch>\n  </Router>\n);\n","import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration: none;\n        color:inherit;\n    }\n    *{\n        box-sizing: border-box;\n    }\n    body{\n        font-family: --apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size: 12px;\n        background-color: rgba(20, 20, 20, 1);\n        color: white;\n        padding-top: 50px;\n    }\n`;\n\nexport default globalStyles;\n","import React, { Component } from 'react';\nimport Router from 'components/Router';\nimport GlobalStyles from './GlobalStyles';\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}